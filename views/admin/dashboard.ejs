<%- include('../layoutsAdmin/adminheader') %> 
<%- include('../layoutsAdmin/header') %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<style>
.table-responsive {
    background: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

#salesReportTable {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    margin-bottom: 1rem;
}

#salesReportTable thead {
    background-color: #f8f9fa;
}

#salesReportTable th, #salesReportTable td {
    padding: 1rem;
    border-bottom: 1px solid #e9ecef;
    text-align: left;
    color: #6c757d;
}

#salesReportTable th {
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.85rem;
}

#salesReportTable tbody tr:hover {
    background-color: #f8f9fa;
}

.pagination {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
}

.pagination select, .pagination button {
    padding: 0.375rem 0.75rem;
    border: 1px solid #dee2e6;
    background-color: #fff;
    cursor: pointer;
    transition: all 0.2s;
}

.pagination button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.pagination button:hover:not(:disabled) {
    background-color: #e9ecef;
}
.dropdown-menu {
    min-width: 8rem;
}

.dropdown-item {
    padding: 0.5rem 1rem;
    cursor: pointer;
}

.dropdown-item:hover {
    background-color: #f8f9fa;
}
</style>

<section class="content-main">
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 col-sm-12 mb-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <h6 class="mb-0">Total Revenue</h6>
                            <h2 class="mb-0">₹<span id="totalRevenue">0</span></h2>
                            <small class="text-danger" id="revenueChange">(0%)</small>
                        </div>
                        <div class="rounded-circle p-3" style="background-color: rgba(147, 51, 234, 0.1)">
                            <i class="fas fa-rupee-sign text-purple" style="font-size: 24px; color: #9333EA;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 mb-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <h6 class="mb-0">Total Orders</h6>
                            <h2 class="mb-0"><span id="totalOrders">0</span></h2>
                            <small class="text-success" id="ordersChange">(0%)</small>
                        </div>
                        <div class="rounded-circle p-3" style="background-color: rgba(34, 197, 94, 0.1)">
                            <i class="fas fa-shopping-cart" style="font-size: 24px; color: #22C55E;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
        <!-- Total Customers Card -->
        <div class="col-lg-3 col-md-6 col-sm-12 mb-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <h6 class="mb-0">Total Customers</h6>
                            <h2 class="mb-0"><span id="totalCustomers">0</span></h2>
                            <small class="text-danger" id="customersChange">(0%)</small>
                        </div>
                        <div class="rounded-circle p-3" style="background-color: rgba(59, 130, 246, 0.1)">
                            <i class="fas fa-users" style="font-size: 24px; color: #3B82F6;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
        <!-- Total Discounts Card -->
        <div class="col-lg-3 col-md-6 col-sm-12 mb-4">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <h6 class="mb-0">Total Discounts</h6>
                            <h2 class="mb-0">₹<span id="totalDiscounts">0</span></h2>
                        </div>
                        <div class="rounded-circle p-3" style="background-color: rgba(234, 179, 8, 0.1)">
                            <i class="fas fa-tag" style="font-size: 24px; color: #EAB308;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Sales Chart</h4>
                </div>
                <div class="card-body">
                    <canvas id="salesChart" height="100"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Top 10 Products</h4>
                </div>
                <div class="card-body">
                    <canvas id="topProductsChart" height="300"></canvas>
                </div>
            </div>
        </div>
        <!-- Top Categories Chart -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Top Categories</h4>
                </div>
                <div class="card-body">
                    <canvas id="topCategoriesChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="card mb-4">
        <header class="card-header">
            <h4 class="card-title">Sales Report</h4>
            <div class="row align-items-center">
                <div class="col-md-3 col-12 mb-3">
                    <select id="reportType" class="form-select">
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="monthly">Monthly</option>
                        <option value="yearly">Yearly</option>
                        <option value="custom">Custom Range</option>
                    </select>
                </div>
                <div class="col-md-3 col-12 mb-3 date-range" style="display: none">
                    <input type="date" id="startDate" class="form-control" />
                </div>
                <div class="col-md-3 col-12 mb-3 date-range" style="display: none">
                    <input type="date" id="endDate" class="form-control" />
                </div>
                <div class="col-md-3 col-12 mb-3">
                    <button class="btn btn-primary" onclick="generateReport()">Generate Report</button>
                </div>
                <div class="col-md-3 col-12 mb-3">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="downloadDropdown" 
                            data-bs-toggle="dropdown" aria-expanded="false">
                            Download Report
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <a class="dropdown-item" href="#" onclick="downloadReport('excel')">Excel</a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="#" onclick="downloadReport('pdf')">PDF</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </header>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table" id="salesReportTable">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Date</th>
                            <th>Total (After offer)</th>
                            <th>Coupon Discount</th>
                            <th>Final Amount <br>+shiping charge</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3"><strong>Summary</strong></td>
                            <td id="totalAmount">0</td>
                            <td id="totalDiscount">0</td>
                            <td id="finalTotal">0</td>
                        </tr>
                    </tfoot>
                </table>
                <div class="pagination">
                    <select id="pageSize">
                        <option value="10">10 per page</option>
                        <option value="25">25 per page</option>
                        <option value="50">50 per page</option>
                    </select>
                    <button id="prevPage" disabled>Previous</button>
                    <span class="current-page">Page <span id="currentPage">1</span> of <span id="totalPages">1</span></span>
                    <button id="nextPage" disabled>Next</button>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let salesChart;

    function initializeSalesChart() {
      const ctx = document.getElementById('salesChart').getContext('2d');
      salesChart = new Chart(ctx, {
         type: 'bar',
         data: {
            labels: [],
            datasets: [
                {
                    label: 'Net Sales (₹)',
                    data: [],
                    type: 'line',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 2,
                    fill: false,
                    tension: 0.4,
                    yAxisID: 'y'
                },
                {
                    label: 'Orders',
                    data: [],
                    type: 'bar',
                    backgroundColor: 'rgb(75, 192, 192)',
                    yAxisID: 'y1'
                }
            ]
         },
         options: {
            responsive: true,
            interaction: {
                mode: 'index',
                intersect: false,
            },
            scales: {
                y: {
                    type: 'linear',
                    display: true,
                    position: 'left',
                    title: {
                        display: true,
                        text: 'Net Sales (₹)'
                    },
                    ticks: {
                        callback: function(value) {
                            return '₹' + value;
                        }
                    }
                },
                y1: {
                    type: 'linear',
                    display: true,
                    position: 'right',
                    title: {
                        display: true,
                        text: 'Number of Orders'
                    },
                    grid: {
                        drawOnChartArea: false
                    }
                }
            }
         }
      });
    }

let topProductsChart, topCategoriesChart;

function initializeCharts() {
    const productCtx = document.getElementById('topProductsChart').getContext('2d');
    topProductsChart = new Chart(productCtx, {
        type: 'bar',
        data: {
            labels: [],
            datasets: [{
                label: 'Units Sold',
                data: [],
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            indexAxis: 'y',
            responsive: true,
            scales: {
                x: {
                    beginAtZero: true
                }
            }
        }
    });

    const categoryCtx = document.getElementById('topCategoriesChart').getContext('2d');
    topCategoriesChart = new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: [],
            datasets: [{
                data: [],
                backgroundColor: [
                    'rgba(65, 149, 47, 0.8)',
                    'rgba(217, 217, 47, 0.8)',
                    'rgba(222, 57, 57, 0.8)',
                    'rgba(154, 206, 80, 0.8)',
                    'rgba(139, 122, 93, 0.8)',
                    'rgba(1, 122, 155, 0.8)',
                ]
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'right'
                }
            }
        }
    });
}

document.getElementById("reportType").addEventListener("change", function() {
    const dateRangeInputs = document.querySelectorAll(".date-range");
    dateRangeInputs.forEach(input => {
        input.style.display = this.value === "custom" ? "block" : "none";
    });
});

let currentPage = 1, pageSize = 10, totalPages = 1, currentData = [];

document.getElementById("pageSize").addEventListener("change", function() {
    pageSize = parseInt(this.value);
    currentPage = 1;
    updateTableDisplay();
});

document.getElementById("prevPage").addEventListener("click", function() {
    if (currentPage > 1) {
        currentPage--;
        updateTableDisplay();
    }
});

document.getElementById("nextPage").addEventListener("click", function() {
    if (currentPage < totalPages) {
        currentPage++;
        updateTableDisplay();
    }
});

async function generateReport() {
    const reportType = document.getElementById("reportType").value;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;
    
    let url = `/admin/sales-report?reportType=${reportType}`;
    if (reportType === "custom") {
        url += `&startDate=${startDate}&endDate=${endDate}`;
    }
    
    try {
        const response = await fetch(url);
        const data = await response.json();

        if (data.success) {
            if (data.stats) {
                document.getElementById('totalRevenue').textContent = Math.round(data.stats.revenue.current).toLocaleString('en-IN');

                document.getElementById('revenueChange').textContent = 
                    `(${data.stats.revenue.change > 0 ? '+' : ''}${Math.round(data.stats.revenue.change).toFixed(1)}%)`; 
                document.getElementById('revenueChange').className = 
                    data.stats.revenue.change >= 0 ? 'text-success' : 'text-danger';

                document.getElementById('totalOrders').textContent = data.stats.orders.current.toLocaleString('en-IN');
                document.getElementById('ordersChange').textContent = 
                    `(${data.stats.orders.change > 0 ? '+' : ''}${Math.round(data.stats.orders.change).toFixed(1)}%)`;
                document.getElementById('ordersChange').className = 
                    data.stats.orders.change >= 0 ? 'text-success' : 'text-danger';

                document.getElementById('totalCustomers').textContent = data.stats.customers.current.toLocaleString('en-IN');
                document.getElementById('customersChange').textContent = 
                    `(${data.stats.customers.change > 0 ? '+' : ''}${Math.round(data.stats.customers.change).toFixed(1)}%)`;
                document.getElementById('customersChange').className = 
                    data.stats.customers.change >= 0 ? 'text-success' : 'text-danger';

                document.getElementById('totalDiscounts').textContent =Math.round(data.stats.discounts.current).toLocaleString('en-IN');
            }
            if (data.salesData) {
                salesChart.data.labels = data.salesData.dates;
                salesChart.data.datasets[0].data = data.salesData.sales;
                salesChart.data.datasets[1].data = data.salesData.orders;
                salesChart.update();
            }
            currentData = data.report;
            updateTableDisplay();
            updateSummary(data.summary);
            updateCharts(data.topProducts, data.topCategories);
        }
    } catch (error) {
        console.error("Error generating report:", error);
    }
}

function updateCharts(topProducts, topCategories) {
    topProductsChart.data.labels = topProducts.map(p => p.name);
    topProductsChart.data.datasets[0].data = topProducts.map(p => p.unitsSold);
    topProductsChart.update();

    topCategoriesChart.data.labels = topCategories.map(c => c.name);
    topCategoriesChart.data.datasets[0].data = topCategories.map(c => c.percentage);
    topCategoriesChart.update();
}
document.addEventListener('DOMContentLoaded', initializeCharts);
function updateTableDisplay() {
    const tbody = document.querySelector("#salesReportTable tbody");
    tbody.innerHTML = "";
    
    currentData.slice((currentPage - 1) * pageSize, currentPage * pageSize).forEach(row => {
        tbody.innerHTML += `
        <tr>
            <td>${row.orderId}</td>
            <td>${row.customerName}</td>
            <td>${row.date}</td>
            <td>₹${Math.round(row.total).toFixed(2)}</td>
            <td>₹${Math.round(row.discount).toFixed(2)}</td>
            <td>₹${Math.round(row.finalAmount).toFixed(2)}</td>
        </tr>`;
    });

    document.getElementById("currentPage").textContent = currentPage;
    document.getElementById("totalPages").textContent = totalPages;
    document.getElementById("prevPage").disabled = currentPage === 1;
    document.getElementById("nextPage").disabled = currentPage === totalPages;
}

function updateSummary(summary) {
    document.getElementById("totalAmount").textContent = `₹${Math.round(summary.totalAmount).toFixed(2)}`;
    document.getElementById("totalDiscount").textContent = `₹${Math.round(summary.totalDiscount).toFixed(2)}`;
    const finalTotalWithShipping = summary.totalAmount - summary.totalDiscount + (summary.totalOrders * 50);
    document.getElementById("finalTotal").textContent = `₹${Math.round(finalTotalWithShipping).toFixed(2)}`;
}

function downloadReport(type) {
    const reportType = document.getElementById("reportType").value;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    if (reportType === "custom" && (!startDate || !endDate || !validateDates())) {
        alert("Please select valid date range");
        return;
    }

    let url = `/admin/sales-report?reportType=${reportType}&download=${type}`;
    if (reportType === "custom") {
        url += `&startDate=${startDate}&endDate=${endDate}`;
    }
    window.location.href = url;
}

function validateDates() {
    const startDate = new Date(document.getElementById("startDate").value);
    const endDate = new Date(document.getElementById("endDate").value);
    return startDate <= endDate;
}
document.addEventListener('DOMContentLoaded', function() {
    initializeSalesChart();
    initializeCharts();
    if (typeof bootstrap !== 'undefined') {
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
        var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
            return new bootstrap.Dropdown(dropdownToggleEl)
        });
    }
});

</script>

