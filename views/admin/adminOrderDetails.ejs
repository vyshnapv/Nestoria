<%- include('../layoutsAdmin/adminheader') %> 
<%- include('../layoutsAdmin/header') %>

<style>
  .main-panel {
    background-color: #f5f5f5;
    padding: 20px;
  }
  .order-container {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  .section {
    font-size: 2rem;
    color: #333;
  }
  .section-title {
    font-size: 1.35rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 15px;
  }

  .order-summary,
  .delivery-address,
  .order-items {
    margin-bottom: 20px;
  }

  .order-details-wrapper {
    display: flex;
    justify-content: space-between;
    gap: 20px;
  }

  .details-card {
    flex: 1;
    padding: 15px;
    background-color: white;
    border-radius: 5px;
    box-shadow: 0 3px 5px 3px rgba(8, 7, 7, 0.1);
  }

  .order-item-card {
    background-color: white;
    padding: 15px;
    border-radius: 5px;
    box-shadow: 0 3px 5px 3px rgba(0, 0, 0, 0.1);
    display: flex; 
    justify-content: space-between; 
    align-items: center;
    margin-bottom: 15px;
  }
  .order-item-image {
    display: flex;
    flex-direction: column; 
    align-items: center;
    width: 25%; 
  }
  .order-item-image img {
    width: 80px;
    height: auto;
    border-radius: 5px;
    margin-bottom: 10px; 
  }

  .product-name {
    text-align: center; 
    font-size: 1.1rem;
    margin-bottom: 10px; 
  }
  .order-item-details {
    width: 70%; 
  }

  .status-dropdown {
    width: 150px; 
    padding: 5px 8px;
    border-radius: 4px;
    border: 1px solid #ccc;
    font-size: 0.9rem; 
    background-color: #f9f9f9;
  }

  .btn-back {
    background-color: #30475b;
    border: 2px solid #5d5a7b;
    color: white;
    font-weight: bold;
    transition: all 0.3s ease;
    border-radius: 4px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    cursor: pointer;
  }

  .btn-back:hover {
    background-color: #54545d;
    transform: translateY(-3px);
  }
  .status-controls {
    display: flex;
    gap: 15px;
    align-items: center;
    margin-bottom: 20px;
  }

  .cancel-all-btn {
    background-color: #dc3545;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
  }

  .cancel-product-btn {
    background-color: #dc3545;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9rem;
    cursor: pointer;
  }

  .status-dropdown:disabled {
    background-color: #e9ecef;
    cursor: not-allowed;
  }
</style>

<div class="main-panel">
  <div class="content-wrapper col-lg-12">
    <div class="order-container">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="section">Order Details</h3>
        <div class="d-flex gap-3">
          <button class="cancel-all-btn" onclick="cancelAllProducts('<%= order.orderId %>')">
            Cancel All Products
          </button>
          <button class="btn-back" onclick="location.href='/admin/orderList'">
            Back to Orders
          </button>
        </div>
      </div>

      <div class="order-details-wrapper">
        <div class="details-card order-summary">
          <p><strong>Order ID:</strong> <%= order.orderId %></p>
          <p><strong>Order Date:</strong> <%= order.orderDate %></p>
          <p>
            <strong>Total Amount:</strong> 
               ₹ <%= Math.round(order.subtotal)%>
          </p>
          <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
          <p><strong>Payment Status:</strong> <%= order.paymentStatus %></p>
          <p><strong>Customer Name:</strong> <%= order.customer.name %></p>
          
          <div class="status-controls">
            <label for="order-status"><strong>Order Status:</strong></label>
            <select 
              id="order-status" 
              class="status-dropdown"
              onchange="updateAllProductsStatus('<%= order.orderId %>', this.value)"
            >
              <option value="Processing">Processing</option>
              <option value="Shipped">Shipped</option>
              <option value="Delivered">Delivered</option>
            </select>
          </div>
        </div>

        <div class="details-card delivery-address">
            <div class="section-title">Delivery Address</div>
            <p><strong>Name:</strong> <%= order.address.name %></p>
            <p><strong>Email:</strong> <%= order.customer.email %></p>
            <p><strong>Mobile:</strong> <%= order.address.phone %></p>
            <p><strong>Address:</strong> <%= order.address.house %>, <%= order.address.city %>, <%= order.address.district %>, <%= order.address.state %>, <%= order.address.pincode %></p>
          </div>
      </div>

     <div class="order-items">
        <div class="section-title">Items</div>

        <% order.items.forEach(item => { %>
          <div class="order-item-card">
            <div class="order-item-image">
              <img src="<%= item.image %>" alt="<%= item.productName %>" onerror="this.src='/placeholder-image.jpg'" />
              <h4 class="product-name"><%= item.productName %></h4>
            </div>

            <div class="order-item-details">
              <p><strong>Category:</strong> <%= item.category %></p>
              <p><strong>Quantity:</strong> <%= item.quantity %></p>
              <p>
                <strong>Price:</strong> 
                <% if (item.highestDiscount > 0) { %>
                  Original Price: <span style="text-decoration: line-through;">₹<%= item.price %></span><br>
                  Offer Price: <span style="color: green;">₹<%= item.offerPrice %> (<%= item.highestDiscount %>% off)</span><br>
                <% } else { %>
                  Price: ₹<%= item.price %><br>
                <% } %>
                Final Price: ₹<%= Math.round(item.finalPrice) %>
              </p>
              <p><strong>Status:</strong> <span id="status-text-<%= item.productId %>"><%= item.status %></span></p>
              
              <% if (item.status !== 'Cancelled') { %>
                <button 
                  class="cancel-product-btn"
                  onclick="cancelProduct('<%= order.orderId %>', '<%= item.productId %>')"
                >
                  Cancel Product
                </button>
              <% } %>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   document.addEventListener('DOMContentLoaded', function() {
    const orderStatus = document.getElementById('order-status');
    const currentStatus = '<%= order.items[0].status %>';
    orderStatus.value = currentStatus;
    updateStatusDropdownOptions(currentStatus);
  });

  function updateStatusDropdownOptions(currentStatus) {
    const orderStatus = document.getElementById('order-status');
    const options = orderStatus.options;

    for (let option of options) {
      if (currentStatus === 'Processing') {
        option.disabled = option.value === 'Delivered';
      } else if (currentStatus === 'Shipped') {
        option.disabled = option.value === 'Processing';
      } else if (currentStatus === 'Delivered') {
        orderStatus.disabled = true;
      }
    }
  }

  async function updateAllProductsStatus(orderId, status) {
    try {
      const response = await fetch('/admin/updateAllProductsStatus', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          orderId,
          status
        })
      });

      const data = await response.json();
      
      if (data.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Order status updated successfully',
          confirmButtonText: 'OK'
        }).then(() => {
          location.reload();
        });
      } else {
        throw new Error(data.message);
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'Failed to update status',
        confirmButtonText: 'Try Again'
      });
    }
  }

  async function cancelProduct(orderId, productId) {
    try {
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to cancel this product?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
      });

      if (result.isConfirmed) {
        const response = await fetch('/admin/updateOrderStatus', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            orderId,
            productId,
            status: 'Cancelled'
          })
        });

        const data = await response.json();
        
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Product cancelled successfully',
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload();
          });
        } else {
          throw new Error(data.message);
        }
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'Failed to cancel product',
        confirmButtonText: 'Try Again'
      });
    }
  }

  async function cancelAllProducts(orderId) {
    try {
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to cancel all products in this order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel all!'
      });

      if (result.isConfirmed) {
        const response = await fetch('/admin/cancelAllProducts', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ orderId })
        });

        const data = await response.json();
        
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'All products cancelled successfully',
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload();
          });
        } else {
          throw new Error(data.message);
        }
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'Failed to cancel products',
        confirmButtonText: 'Try Again'
      });
    }
  }
    </script>

<script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/assets/js/vendors/select2.min.js"></script>
<script src="/assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="/assets/js/vendors/chart.js"></script>
<script src="/assets/js/main.js?v=1.1" type="text/javascript"></script>
<script src="/assets/js/custom-chart.js" type="text/javascript"></script>
