<%- include('../layoutsUser/userheader') %>
        <main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">Shopping Cart<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Shopping Cart</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
            	<div class="cart">
	                <div class="container">
	                	<div class="row">
	                		<div class="col-lg-9">
								<% if (!cart || !cart.items || cart.items.length === 0) { %>
									<div class="text-center py-5" id="empty-cart-message">
										<h3>Your cart is empty</h3>
										<a href="/shop" class="btn btn-outline-primary-2 mt-3">Continue Shopping</a>
									</div>
									<% } else { %>
	                			<table class="table table-cart table-mobile">
									<thead>
										<tr>
											<th>Product</th>
											<th>Price</th>
											<th>Quantity</th>
											<th>Total</th>
											<th>Action</th>
										</tr>
									</thead>

									<tbody>
                                        <% cart.items.forEach(item => { %>
                                            <% const product = item.product %>
                                            <% const price = product.highestDiscount > 0 ? product.offerPrice : product.regularPrice %>
                                            <% const itemTotal = price * item.quantity %>
                                            <tr data-product-id="<%= product._id %>">
                                                <td class="product-col">
                                                    <div class="product">
                                                        <figure class="product-media">
                                                            <a href="/product/<%= product._id %>">
                                                                <img src="/uploads/cropped/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                                                            </a>
                                                        </figure>
                                    
                                                        <h3 class="product-title">
                                                            <a href="/product/<%= product._id %>"><%= product.productName %></a>
                                                        </h3>
                                                    </div>
                                                </td>
                                                <% if (product.highestDiscount > 0) { %>
                                                    <td class="price-col">
                                                        ₹<%= product.offerPrice.toFixed(2) %>
                                                    </td>
                                                <% } else { %>
                                                    <td class="price-col">₹<%= product.regularPrice %></td>
                                                <% } %>
                                                <td class="quantity-col">
                                                    <div class="cart-product-quantity">
                                                        <input type="number" class="form-control quantity-input" value="<%= item.quantity %>" min="1" max="5" step="1" data-decimals="0" data-product-id="<%= product._id %>" required oninput="validity.valid||(value='1');">
                                                    </div>
                                                </td>
                                                <td class="total-col" id="total-<%= product._id %>">₹<%= itemTotal.toFixed(2) %></td>
                                                <td class="remove-col"><button class="btn-remove"><i class="icon-close"></i></button></td>
                                            </tr>
                                        <% }) %>
                                    </tbody>
								</table><!-- End .table table-wishlist -->

	                			<div class="cart-bottom">
			            			<!-- <div class="cart-discount">
			            				<form action="#">
			            					<div class="input-group">
				        						<input type="text" class="form-control" required placeholder="coupon code">
				        						<div class="input-group-append">
													<button class="btn btn-outline-primary-2" type="submit"><i class="icon-long-arrow-right"></i></button>
												</div>
			        						</div>
			            				</form>
			            			</div> -->
		            			</div><!-- End .cart-bottom -->
								<% } %>
	                		</div><!-- End .col-lg-9 -->
	                		<aside class="col-lg-3">
                                <div class="summary summary-cart">
                                    <h3>Cart Summary</h3>
                            
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Product Name</th>
                                                <th>Quantity</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% cart.items.forEach(item => { %>
                                                <% const product = item.product %>
                                                <% const price = product.highestDiscount > 0 ? product.offerPrice : product.regularPrice %>
                                                <% const itemTotal = price * item.quantity %>
                                                <tr>
                                                    <td><%= product.productName %></td>
                                                    <td><%= item.quantity %></td>
                                                    <td>₹<%= itemTotal.toFixed(2) %></td>
                                                </tr>
                                            <% }) %>
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td colspan="2"><strong>Subtotal:</strong></td>
                                                <td id="subtotal"><strong>₹<%= subtotal.toFixed(2) %></strong></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                            
                                   
                                    <div>
                                        <a href="/checkout" class="btn btn-outline-primary-2 btn-order btn-block">PROCEED TO CHECKOUT</a>
                                    </div>
                                </div>
                            
                               
                                <div>
                                    <a href="/shop" class="btn btn-outline-dark-2 btn-block mb-3"><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i></a>
                                </div>
                            </aside>
                            
	                	</div><!-- End .row -->
	                </div><!-- End .container -->
                </div><!-- End .cart -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->

		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
 document.addEventListener('DOMContentLoaded', function() {
    function updateCartSummary(items) {
    const summaryTableBody = document.querySelector('.summary-cart tbody');
    const subtotalElement = document.querySelector('.summary-cart #subtotal');
    
    while (summaryTableBody.firstChild) {
        summaryTableBody.removeChild(summaryTableBody.firstChild);
    }
    
    let subtotal = 0;
    
    items.forEach(item => {
        const row = document.createElement('tr');
        
        const priceElement = item.querySelector('.price-col');
        const price = parseFloat(priceElement.textContent.replace('₹', ''));
        
        const quantity = parseInt(item.querySelector('.quantity-input').value);
        const productName = item.querySelector('.product-title a').textContent;
        const itemTotal = price * quantity;
        subtotal += itemTotal;
        
        row.innerHTML = `
            <td>${productName}</td>
            <td>${quantity}</td>
            <td>₹${itemTotal.toFixed(2)}</td>
        `;
        
        summaryTableBody.appendChild(row);
    });
    
    if (subtotalElement) {
        subtotalElement.innerHTML = `<strong>₹${subtotal.toFixed(2)}</strong>`;
    }
}

  document.querySelectorAll('.quantity-input').forEach(input => {
      input.addEventListener('change', async (event) => {
          const productId = event.target.dataset.productId;
          let quantity = parseInt(event.target.value);
          const row = event.target.closest('tr');
          const priceElement = row.querySelector('.price-col');
          const totalElement = row.querySelector('.total-col');

          try {
              const response = await fetch('/updateCart', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ productId, quantity })
              });
              const result = await response.json();

              if (result.success) {
                  const price = parseFloat(priceElement.textContent.replace('₹', ''));
                  const newTotal = price * quantity;
                  totalElement.textContent = `₹${newTotal.toFixed(2)}`;

                  
                  const allItems = document.querySelectorAll('.table-cart tbody tr');
                  updateCartSummary(allItems);
              } else {
                  Swal.fire({
                      icon: 'error',
                      title: 'Stock Limit Reached',
                      text: result.message
                  });

                  if (result.availableStock !== undefined) {
                      event.target.value = result.availableStock;
                      
                      const allItems = document.querySelectorAll('.table-cart tbody tr');
                      updateCartSummary(allItems);
                  }
              }
          } catch (error) {
              console.error("Error updating quantity:", error);
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Failed to update quantity. Please try again.'
              });
          }
      });
  });


  document.querySelectorAll('.btn-remove').forEach(button => {
      button.addEventListener('click', async () => {
          const row = button.closest('tr');
          const productId = row.dataset.productId;
          const productName = row.querySelector('.product-title a').textContent;

          const result = await Swal.fire({
              title: 'Remove Item?',
              text: `Are you sure you want to remove ${productName} from your cart?`,
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Yes, remove it!',
              cancelButtonText: 'Cancel'
          });

          if (result.isConfirmed) {
              try {
                  const response = await fetch('/removeFromCart', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ productId })
                  });

                  const result = await response.json();

                  if (result.success) {
                      Swal.fire({
                          icon: 'success',
                          title: 'Removed!',
                          text: 'Item has been removed from your cart.',
                          confirmButtonColor: '#3085d6',
                          timer: 2000,
                          showConfirmButton: false
                      });

                      row.remove();

                      const remainingItems = document.querySelectorAll('.table-cart tbody tr');
                      if (remainingItems.length > 0) {
                          updateCartSummary(remainingItems);
                      } else {
                          const cartContainer = document.querySelector('.col-lg-9');
                          cartContainer.innerHTML = `
                              <div class="text-center py-5" id="empty-cart-message">
                                  <h3>Your cart is empty</h3>
                                  <a href="/shop" class="btn btn-outline-primary-2 mt-3">Continue Shopping</a>
                              </div>
                          `;
                          
                          const summaryContainer = document.querySelector('.summary-cart tbody');
                          summaryContainer.innerHTML = '';
                          const subtotalElement = document.querySelector('.summary-cart #subtotal');
                          if (subtotalElement) {
                              subtotalElement.innerHTML = '<strong>₹0.00</strong>';
                          }
                      }
                  } else {
                      Swal.fire({
                          icon: 'error',
                          title: 'Error',
                          text: result.message,
                          confirmButtonColor: '#3085d6'
                      });
                  }
              } catch (error) {
                  console.error("Error removing item:", error);
                  Swal.fire({
                      icon: 'error',
                      title: 'Error',
                      text: 'Failed to remove item. Please try again.',
                      confirmButtonColor: '#3085d6'
                  });
              }
          }
      });
  });
});
</script>
		
 <%- include('../layoutsUser/userfooter') %>