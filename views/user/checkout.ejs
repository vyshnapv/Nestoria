<%- include('../layoutsUser/userheader') %>
<style>

.cart-summary-box {
    padding: 15px;
    background-color: #f9f9f9;
    border-radius: 8px;
}

.checkout-title {
    font-size: 1.3em;
    margin-bottom: 15px;
    text-align: center;
}

.cart-items-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.cart-item-card {
    display: flex;
    align-items: center;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 10px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.product-media img {
    max-width: 50px;
    height: auto;
    margin-right: 15px;
    border-radius: 4px;
}

.product-details {
    display: flex;
    flex-direction: column;
    gap: 3px;
}

.price, .quantity, .total {
    font-size: 0.85em;
    color: #555;
    margin: 0;
}

.address-list {
    margin-top: 20px;
    display: none; /* Hide initially */
}

.address-item {
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 6px;
    margin-bottom: 10px;
    background-color: #f9f9f9;
    width: 100%;
    max-width: 250px;
    font-size: 0.9em;
    position: relative;
    cursor: pointer;
    transition: border-color 0.3s;
    display: inline-block;
    vertical-align: top;
}

.address-item.selected {
    border-color: #007bff;
    background-color: #e6f0ff;
}

.select-icon {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid #ddd;
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s, border-color 0.3s;
}

.select-icon.selected {
    background-color: #007bff;
    border-color: #007bff;
}

/* New styles for button alignment */
.address-buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 15px;
}

#addAddressForm {
    display: none;
    margin-top: 20px;
    padding: 20px;
    background-color: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    font-weight: bold;
    color: #555;
    display: block;
    margin-bottom: 5px;
}

.form-control {
    width: 100%;
    padding: 10px;
    font-size: 14px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.error {
    border-color: #dc3545;
}

.error-message {
    color: #dc3545;
    font-size: 12px;
    margin-top: 5px;
    display: none;
}

.btn-primary, .btn-secondary {
    padding: 10px 20px;
    border-radius: 5px;
    border: none;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s;
}

.btn-primary {
    background-color: #007bff;
    color: white;
}

.btn-secondary {
    background-color: #6c757d;
    color: white;
    margin-left: 10px;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.btn-secondary:hover {
    background-color: #545b62;
}

.checkout-container {
    position: relative;
    display: flex;
    gap: 30px;
}

.main-content {
    flex: 1;
}

.sidebar {
    width: 300px;
    position: sticky;
    top: 20px;
    height: fit-content;
}

#addAddressForm {
    display: none;
    margin-top: 20px;
    padding: 20px;
    background-color: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    max-width: 100%;
}

</style>

<main class="main">
    <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title">Checkout<span>Shop</span></h1>
        </div>
    </div>
    
    <nav aria-label="breadcrumb" class="breadcrumb-nav">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
        </div>
    </nav>

    <div class="page-content">
        <div class="checkout">
            <div class="container">
               <div class="checkout-container">
                  <div class="main-content">
                        <div class="cart-summary-box mb-4">
                            <h2 class="checkout-title">Order Summary</h2>
                            <div class="cart-items-list">
                                <% cart.items.forEach(item => { %>
                                <% const product = item.product %>
                                <% const itemTotal = product.salePrice * item.quantity %>
                                <div class="cart-item-card">
                                    <div class="product-media">
                                        <img src="/uploads/cropped/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                                    </div>
                                    <div class="product-details">
                                        <p class="price">Product Name: <%= product.productName %></p>
                                        <p class="price">Price: ₹<%= product.salePrice %></p>
                                        <p class="quantity">Quantity: <%= item.quantity %></p>
                                        <p class="total">Total: ₹<%= itemTotal %></p>
                                    </div>
                                </div>
                                <% }) %>
                            </div>
                        </div>

                        <!-- Address Buttons Section -->
                        <div class="address-buttons">
                            
                            <button id="show-addresses-btn" class="btn btn-primary">Your Addresses</button>
                            <button id="add-address-btn" class="btn btn-secondary" onclick="toggleForm()">Add Address</button>
                        </div>

                        <!-- Display All Addresses -->
                        <div class="col-lg-12 address-list" id="address-list">
                            <h4>Your Addresses</h4>
                            <% if (addresses && addresses.address && addresses.address.length > 0) { %>
                                <% addresses.address.forEach((address, index) => { %>
                                    <div class="address-item" onclick="selectAddress('<%= index %>')" data-index="<%= index %>">
                                        <h5>Address <%= index + 1 %></h5>
                                        <p>Name: <%= address.name %></p>
                                        <p>Phone: <%= address.phone %></p>
                                        <p>District: <%= address.district %></p>
                                        <p>City: <%= address.city %></p>
                                        <p>House: <%= address.house %></p>
                                        <p>State: <%= address.state %></p>
                                        <p>Pincode: <%= address.pincode %></p>
                                        <div class="select-icon" id="select-icon-<%= index %>"></div>
                                    </div>
                                <% }) %>
                            <% } else { %>
                                <p>No addresses found. <a href="/address">Add an Address</a></p>
                            <% } %>
                        </div>
                        

                    <div id="addAddressForm" >
                        <form id="actualAddAddressForm" method="POST" action="/addAddress">
                            <div class="form-group">
                                <label for="name">Name</label>
                                <input type="text" class="form-control" id="name" name="name">
                                <span class="error-message" id="nameError"></span>
                            </div>
                            <div class="form-group">
                                <label for="phone">Phone</label>
                                <input type="text" class="form-control" id="phone" name="phone">
                                <span class="error-message" id="phoneError"></span>
                            </div>
                            <div class="form-group">
                                <label for="district">District</label>
                                <input type="text" class="form-control" id="district" name="district">
                                <span class="error-message" id="districtError"></span>
                            </div>
                            <div class="form-group">
                                <label for="city">City</label>
                                <input type="text" class="form-control" id="city" name="city">
                                <span class="error-message" id="cityError"></span>
                            </div>
                            <div class="form-group">
                                <label for="house">House</label>
                                <input type="text" class="form-control" id="house" name="house">
                                <span class="error-message" id="houseError"></span>
                            </div>
                            <div class="form-group">
                                <label for="state">State</label>
                                <input type="text" class="form-control" id="state" name="state">
                                <span class="error-message" id="stateError"></span>
                            </div>
                            <div class="form-group">
                                <label for="pincode">Pincode</label>
                                <input type="text" class="form-control" id="pincode" name="pincode">
                                <span class="error-message" id="pincodeError"></span>
                            </div>
                            <button type="submit" class="btn btn-primary">Save Address</button>
                            <button type="button" class="btn btn-secondary" onclick="cancelForm()">Cancel</button>
                        </form>
                    </div>
                </div>
                    <!-- Order Summary Sidebar -->
                    <aside  class="sidebar">
                        <div class="summary">
                            <h3 class="summary-title">Order Summary</h3>
                            <table class="table table-summary">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% cart.items.forEach(item => { %>
                                    <% const product = item.product %>
                                    <% const itemTotal = product.salePrice * item.quantity %>
                                    <tr>
                                        <td><%= product.productName %></td>
                                        <td>₹<%= itemTotal.toFixed(2) %></td>
                                    </tr>
                                    <% }) %>
                                    
                                    <tr class="summary-subtotal">
                                        <td>Subtotal:</td>
                                        <td>₹<%= subtotal.toFixed(2) %></td>
                                    </tr>
                                    <tr class="summary-total">
                                        <td>Total:</td>
                                        <td>₹<%= subtotal.toFixed(2) %></td>
                                    </tr>
                                </tbody>
                            </table>

                            <div class="payment-method mb-3">
                                <label>Payment Method:</label>
                                <input type="radio" name="paymentMethod" value="COD" id="paymentCOD">
                                <label for="paymentCOD">Cash on Delivery</label>
                            </div>
                            <button type="button" id="placeOrderButton" class="btn btn-outline-primary-2 btn-block">Place Order</button>
                        </div>
                    </aside>
                </div>
            </div>
        </div>
    </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    
    document.getElementById('show-addresses-btn').addEventListener('click', function() {
        const addressList = document.getElementById('address-list');
        addressList.style.display = addressList.style.display === 'none' ? 'block' : 'none';
    });

    
    function selectAddress(index) {
        document.querySelectorAll('.address-item').forEach(item => {
            item.classList.remove('selected');
            const icon = item.querySelector('.select-icon');
            if (icon) icon.classList.remove('selected');
        });

        const selectedItem = document.querySelector(`.address-item[data-index="${index}"]`);
        selectedItem.classList.add('selected');

        const selectIcon = document.getElementById(`select-icon-${index}`);
        selectIcon.classList.add('selected');

        sessionStorage.setItem('selectedAddress', index);
    }

    function toggleForm() {
    var form = document.getElementById("addAddressForm");
    form.style.display = form.style.display === "none" ? "block" : "none";
}

function cancelForm() {
    Swal.fire({
        title: 'Are you sure?',
        text: "Your entered data will be discarded!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            document.getElementById("addAddressForm").style.display = "none";
            document.getElementById("actualAddAddressForm").reset();
            clearErrors();
            Swal.fire(
                'Cancelled!',
                'Form has been reset.',
                'success'
            )
        }
    })
}

function showError(elementId, message) {
    const element = document.getElementById(elementId);
    const errorElement = document.getElementById(elementId + 'Error');
    element.classList.add('error');
    errorElement.style.display = 'block';
    errorElement.textContent = message;
}

function clearErrors() {
    const inputs = document.querySelectorAll('.form-control');
    inputs.forEach(input => {
        input.classList.remove('error');
        const errorElement = document.getElementById(input.id + 'Error');
        if (errorElement) {
            errorElement.style.display = 'none';
            errorElement.textContent = '';
        }
    });
}

document.getElementById("actualAddAddressForm").addEventListener("submit", function(e) {
    e.preventDefault();
    clearErrors();
    let isValid = true;

    
    const name = document.getElementById("name").value;
    if (!/^[A-Za-z\s]{3,50}$/.test(name)) {
        showError("name", "Name should be 3-50 characters long and contain only letters and spaces");
        isValid = false;
    }

    
    const phone = document.getElementById("phone").value;
    if (!/^[6-9]\d{9}$/.test(phone)) {
        showError("phone", "Please enter a valid 10-digit phone number starting with 6-9");
        isValid = false;
    }

    
    const district = document.getElementById("district").value;
    if (!/^[A-Za-z\s]{3,30}$/.test(district)) {
        showError("district", "District should be 3-30 characters long and contain only letters and spaces");
        isValid = false;
    }

   
    const city = document.getElementById("city").value;
    if (!/^[A-Za-z\s]{3,30}$/.test(city)) {
        showError("city", "City should be 3-30 characters long and contain only letters and spaces");
        isValid = false;
    }

    
    const house = document.getElementById("house").value;
    if (!/^[A-Za-z0-9\s,.-/#]{3,100}$/.test(house)) {
        showError("house", "House should be 3-100 characters long and contain only letters, numbers, spaces, and common symbols");
        isValid = false;
    }

    
    const state = document.getElementById("state").value;
    if (!/^[A-Za-z\s]{3,30}$/.test(state)) {
        showError("state", "State should be 3-30 characters long and contain only letters and spaces");
        isValid = false;
    }

    
    const pincode = document.getElementById("pincode").value;
    if (!/^\d{6}$/.test(pincode)) {
        showError("pincode", "Please enter a valid 6-digit pincode");
        isValid = false;
    }

    if (isValid) {
        Swal.fire({
            title: 'Save Address?',
            text: "Do you want to save this address?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, save it!'
        }).then((result) => {
            if (result.isConfirmed) {
                this.submit();
            }
        });
    }
});


document.addEventListener("DOMContentLoaded", function () {
    const placeOrderButton = document.getElementById("placeOrderButton");

    placeOrderButton.addEventListener("click", async () => {
        const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;
        const selectedAddress = document.querySelector('.address-item.selected');

        if (!paymentMethod) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a payment method.'
            });
            return;
        }

        if (!selectedAddress) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select an address.'
            });
            return;
        }

        const addressId = selectedAddress.getAttribute('data-index'); 
        console.log('qqwqq',paymentMethod, addressId)
        try {
            const response = await fetch("/place-order", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ paymentMethod, addressId })
            });

            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Order Placed',
                    text: result.message,
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    window.location.href = `/ordersuccess/${result.orderId}`;
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: result.message
                });
            }
        } catch (error) {
            console.error("Error placing order:", error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred while placing the order.'
            });
        }
    });
});
</script>

<%- include('../layoutsUser/userfooter') %>  
