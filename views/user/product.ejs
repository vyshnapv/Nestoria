
<%- include('../layoutsUser/userheader') %>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
        .price {
            color: #28a745;
            font-size: 24px;
            font-weight: bold;
        }

        .rating {
            color: #f0ad4e;
        }

        .category{
            margin-top: 10px;
            color: #28a745;
        }

        .stock {
            margin-top: 10px;
            color: #28a745;
        }

        .limited-stock {
            color: #dc3545;
            font-weight: bold;
            margin-top: 20px;
        }

        .btn-custom {
           background-color: #007bff; 
           color: #fff;
           border-radius: 5px; 
           padding: 10px 30px; 
           width: 200px; 
           border: none; 
        }

        .btn-custom:hover {
           background-color: #0f64be; 
        }

        .icon_btn {
            padding: 13px;
            background: none;
            border: none;
            cursor: pointer;
            color: #e65564; 
            font-size: 24px; 
        }

        .table {
            margin-top: 30px;
        }

        .table th, .table td {
            text-align: center;
        }

        .product-box {
            border: 1px solid #ddd;
            padding: 20px;
            margin-top: 20px;
            border-radius: 10px;
            background-color: #f9f9f9;
        }

        .page-border {
            border: 1px solid #ddd; 
            border-radius: 10px;
            padding: 20px; 
            margin-top: 20px; 
            background-color: #fff; 
        }
        .container{
            width: 70%;
        }
        .btn-custom {
            background: linear-gradient(45deg, #ff6b6b, #f7b733);
        }
       .btn-custom:hover {
            background: linear-gradient(45deg, #f7b733, #ff6b6b); 
        }
        .availability {
            color: black; 
            font-weight: bold;
        }
       .in-stock {
            color: green; 
        }

       .only-left {
           color:orange
        }
       .out-of-stock {
           color: red; 
        }
       .container {
           width: 70%;
        }
       .product-gallery {
           flex: 1;
        }
       .product-details {
           flex: 1; 
        }
       .product-details-top {
           display: flex; 
        }
       .product-details-tab {
           margin-top: 20px;
        }
        .offer-badge {
           margin-bottom: 10px;
        }
        .badge {
            font-size: 18px;
            padding: 3px;
            color: red;
        }
        .regular-price {
            font-size: 20px;
            text-decoration: line-through;
            color: #6c757d;
            margin-right: 10px;
        }
        .offer-price {
            color: #28a745;
            font-size: 24px;
            font-weight: bold;
        }
        .btn-wishlist {
            color: #cccccc;
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .btn-wishlist.active {
            color: #ff0000;
        }

        .btn-wishlist:hover {
            color: #ff0000;
        }
        .product-gallery-vertical 
        .product-gallery-item:before, 
        .product-gallery-vertical
        .product-gallery-item:after {
            bottom: 128px;
        }
</style>

<main class="main">
    <nav aria-label="breadcrumb" class="breadcrumb-nav border-0 mb-0">
        <div class="container d-flex align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">Products</li>
            </ol>
        </div>
    </nav>

    <div class="page-content">
        <div class="container">
            <div class="product-details-top mb-2">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="product-gallery product-gallery-vertical">
                                <div class="row">
                                    <figure class="product-main-image">
                                       
                                        <img id="product-zoom" src="/uploads/<%= product.productImage[0] %>" data-zoom-image="/uploads/<%= product.productImage[0] %>" alt="product image">

                                    </figure>

                                    <div id="product-zoom-gallery" class="product-image-gallery">
                                        <% for(let i=0;i<product.productImage.length;i++){ %>
                                            <a class="product-gallery-item <%= i === 0 ? 'active' : '' %>" href="#" data-image="/uploads/<%= product.productImage[i] %>" data-zoom-image="/uploads/<%= product.productImage[i] %>">
                                                <img src="/uploads/<%= product.productImage[i] %>" alt="product side">
                                            </a>
                                        <% } %>
                                    </div><!-- End .product-image-gallery -->
                                </div><!-- End .row -->
                            </div><!-- End .product-gallery -->
                        </div><!-- End .col-md-6 -->

                <div class="product-details">
                    <h1 class="product-title" style="font-size: xx-large;"><%= product.productName %></h1>
                    <div class="price">
                        <% if (product.offer) { %>
                            <p class="regular-price text-muted" style="text-decoration: line-through;">₹<%= product.regularPrice %></p>
                            <span class="badge">-<%= product.offer.discount %>% OFF</span>
                            <p class="offer-price">₹<%= (product.regularPrice * (1 - product.offer.discount / 100)).toFixed(2) %></p>
                        <% } else { %>
                            <p class="price">₹<%= product.regularPrice %></p>
                        <% } %>
                    </div>

                    <div class="category">
                        <span class="availability">Category:</span> <%= product.category ? product.category.name : 'Uncategorized' %>  
                    </div>

                    <% if (product.quantity >= 10) { %>
                        <div class="stock in-stock"><span class="availability">Availability:</span> In Stock (Total: <%= product.quantity %>)</div>
                    <% } else if (product.quantity >0) { %>
                        <div class="stock only-left"><span class="availability">Availability:</span> Only <%= product.quantity %> left in stock (Total: <%= product.quantity %>)</div>
                    <% } else { %>
                        <div class="stock out-of-stock"><span class="availability">Availability:</span> Out of stock</div>
                    <% } %>

                    <br><br>
                    <div class="product-details-action">
                        <% if (product.quantity > 0) { %>
                            <a href="#" class="btn-product btn-cart addToCart" data-product-id="<%= product._id %>">
                                <span>Add to Cart</span>
                            </a>
                        <div class="details-action-wrapper">
                            <button class="btn-wishlist <%= isWishlisted ? 'active' : '' %>" 
                                    data-product-id="<%= product._id %>"
                                    title="<%= isWishlisted ? 'Remove from Wishlist' : 'Add to Wishlist' %>">
                                <i class="icon-heart"></i>
                            </button>
                        </div>
                        <% } else { %>
                            <a class="btn-product btn-cart disabled" style="pointer-events: none; opacity: 0.6; background-color: #ccc;">
                                <span>Out of Stock</span>
                            </a>
                        <% } %>
                    </div>
                </div><!-- End .product-details -->
            </div><!-- End .product-details-top -->
        </div>
            <div class="product-details-tab">
                <ul class="nav nav-pills justify-content-center" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="product-desc-link" data-toggle="tab" href="#product-desc-tab" role="tab" aria-controls="product-desc-tab" aria-selected="true">Description</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="product-desc-tab" role="tabpanel" aria-labelledby="product-desc-link">
                        <div class="product-desc-content">
                            <p><%= product.description %></p>
                        </div><!-- End .product-desc-content -->
                    </div><!-- .End .tab-pane -->
                </div><!-- End .tab-content -->
            </div><!-- End .product-details-tab -->

        </div><!-- End .container -->
    </div><!-- End .page-content -->
</main><!-- End .main -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function handleAddToCart(button) {
    const productId = button.getAttribute('data-product-id');
    const productName = button.closest('.product, .product-details') 
        ?.querySelector('.product-title a, .product-title')?.textContent;

    fetch('/addToCart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId })
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement && result.cartCount) {
                cartCountElement.textContent = result.cartCount;
            }

            if (result.message.includes('already added')) {
                Swal.fire({
                    title: 'Already in Cart!',
                    text: 'This product is already in your cart',
                    icon: 'info',
                    showConfirmButton: true,
                    confirmButtonText: 'View Cart',
                    showCancelButton: true,
                    cancelButtonText: 'Continue Shopping'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/cart';
                    }
                });
            } else {
                Swal.fire({
                    title: 'Added to Cart!',
                    text: `${productName} was added to your cart successfully!`,
                    icon: 'success',
                    showConfirmButton: true,
                    confirmButtonText: 'View Cart',
                    showCancelButton: true,
                    cancelButtonText: 'Continue Shopping'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/cart';
                    }
                });
            }
        } else {
            throw new Error(result.message);
        }
    })
    .catch(error => {
        if (error.message.includes('login') || error.requireLogin) {
            Swal.fire({
                title: 'Login Required!',
                text: 'Please login to add items to your cart',
                icon: 'info',
                showCancelButton: true,
                confirmButtonText: 'Login Now',
                cancelButtonText: 'Continue Shopping'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/login';
                }
            });
        } else if (error.message.includes('out of stock')) {
            Swal.fire({
                title: 'Out of Stock!',
                text: 'Sorry, this product is currently out of stock',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to add product to cart',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    });
}

document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('#addToCart, .addToCart').forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault();
            handleAddToCart(button);
        });
    });
});

document.addEventListener('DOMContentLoaded', () => {
    const wishlistBtn = document.querySelector('.btn-wishlist');
    if (wishlistBtn) {
        wishlistBtn.addEventListener('click', async (e) => {
            e.preventDefault();
            
            const productId = wishlistBtn.getAttribute('data-product-id');
            
            try {
                const response = await fetch('/addWishlist', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    wishlistBtn.classList.toggle('active');
            
                    const wishlistCountElement = document.querySelector('.wishlist-count');
                    if (wishlistCountElement && result.wishlistCount !== undefined) {
                        wishlistCountElement.textContent = result.wishlistCount;
                    }
                    
                    Swal.fire({
                        title: result.isWishlisted ? 'Added to Wishlist!' : 'Removed from Wishlist',
                        text: result.message,
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    });
                } else {
                    throw new Error(result.message || 'Failed to update wishlist');
                }
            } catch (error) {
                if (error.message.includes('login')) {
                    Swal.fire({
                        title: 'Login Required!',
                        text: 'Please login to manage your wishlist',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonText: 'Login Now',
                        cancelButtonText: 'Continue Shopping'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/login';
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: error.message,
                        icon: 'error'
                    });
                }
            }
        });
    }
});

</script>
<%- include('../layoutsUser/userfooter') %>
